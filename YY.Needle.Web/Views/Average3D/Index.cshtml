<link href="~/Content/ElementUI/element-ui.css" rel="stylesheet" />
<script src="~/Scripts/vue.min.js"></script>
<script src="~/Scripts/axios.js"></script>
<script src="~/Scripts/ElementUI/element-ui.js"></script>
<script src="~/Scripts/moment.min.js"></script>
<div id="app">
    <h2>平均法</h2>
    <el-button type="primary" @@click="RunAverage">全部重新计算</el-button>
    <el-table :data="tableData" style="width:100%" :row-class-name="tableRowClassName">
        <el-table-column property="Number" label="期号" width="100"></el-table-column>
        <el-table-column property="AllChar" label="奖号" width="100"></el-table-column>
        <el-table-column property="DrawDate" label="开奖日期" width="100" :formatter="formatDate"></el-table-column>
        <el-table-column property="TwoAvG" label="2分值" width="100"></el-table-column>
        <el-table-column property="TwoStep" label="2分步长" width="100"></el-table-column>
        <el-table-column property="FourAvg" label="4分值" width="100"></el-table-column>
        <el-table-column property="FourStep" label="4分步长" width="100"></el-table-column>
        <el-table-column property="EightAvg" label="8分值" width="100"></el-table-column>
        <el-table-column property="EightStep" label="8分步长" width="100"></el-table-column>
    </el-table>
    <div class="Pagination" style="text-align: left; margin-top: 10px;">
        <el-pagination background
                       @@size-change="handleSizeChange"
                       @@current-change="handleCurrentChange"
                       :current-page="currentPage"
                       :page-size="limit"
                       layout="total, prev, pager, next"
                       :total="total">
        </el-pagination>
    </div>
</div>
<style>
    .el-table .warning-row {
        background: oldlace;
    }

    .el-table .success-row {
        background: #f0f9eb;
    }
</style>
<script>
    var app = new Vue({
        el: '#app',
        data: {
            limit: 10,
            total: 0,
            currentPage: 1,
            tableData: [],
        },
        created: function () {
             this.getTableData();
        },
        methods: {
            tableRowClassName({ row, rowIndex }) {
                if (rowIndex === 1) {
                    return 'warning-row';
                } else if (rowIndex === 3) {
                    return 'success-row';
                }
                return '';
            },
            getTableData() {
                var _this = this;
                axios.get('/Average3D/GetTableData', {
                    params: {
                        pageIndex: _this.currentPage,
                        pageSize: _this.limit
                    }
                }).then(function (response) {
                    _this.tableData = [];

                    if (response.status == 200) {
                        _this.total = response.data.Total
                        for (var i = 0; i < response.data.PageList.length; i++) {
                            var item = {};
                            item.Number = response.data.PageList[i].Number,
                                item.AllChar = response.data.PageList[i].AllChar,
                                item.DrawDate = response.data.PageList[i].DrawDate,
                                item.TwoAvG = response.data.PageList[i].TwoAvG,
                                item.TwoStep = response.data.PageList[i].TwoStep,
                                item.FourAvg = response.data.PageList[i].FourAvg,
                                item.FourStep = response.data.PageList[i].FourStep,
                                item.EightAvg = response.data.PageList[i].EightAvg,
                                item.EightStep = response.data.PageList[i].EightStep,
                                _this.tableData.push(item);
                        }

                    }

                })
                    .catch(function (error) {
                        console.log(error);
                    });
            },
            RunAverage() {
                axios.post('/Average3D/RunAverage').then(function (response) {
                    if (response.data.ResultCode == "200") {
                        this.$message({
                            message: '执行完成',
                            type: 'success'
                        });
                    } else {
                        this.$message.error('错了哦，执行有问题哦！！');
                    }
                });
            },
            handleSizeChange(val) {

            },
            handleCurrentChange(val) {
                this.currentPage = val;
                this.getTableData();
            },
            formatDate(row, column) {
                let data = row[column.property]
                return moment(data).format('YYYY-MM-DD');
            }
        }
    })
</script>

